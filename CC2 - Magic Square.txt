public class Testing {
    private static int diagonalLeft = 0;
    private static int diagonalRight = 0;
    private static int rows = 0;
    private static int cols = 0;
    
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        String rep;
        int num;
        do{
           do{
               System.out.print("Enter length of square: ");
               num = sc.nextInt();
               if(num % 2 == 0 || num == 1){
                   System.err.println("Invalid input.");
               }
           }while(num % 2 == 0 || num == 1);
           
           printSquare(createSquare(num));
           System.out.print("Try again? [Y/N]: ");
           sc.nextLine();
           rep = sc.nextLine();
        }while(rep.toUpperCase().equals("Y"));
    }
    static int[][] createSquare(int num){
        int[][] sqr = new int[num][num];
        int number = 1;
        int row = 0;
        int column = num / 2;
        int curr_row;
        int curr_col;
        while (number <= num * num) {
            sqr[row][column] = number;
            number++;
            curr_row = row;
            curr_col = column;
            row -= 1;
            column += 1;
            if (row == -1) {
                row = num - 1;
            }
            if (column == num) {
                column = 0;
            }
            if (sqr[row][column] != 0) {
                row = curr_row + 1;
                column = curr_col;
                if (row == -1) {
                    row = num - 1;
                }
            }
        }
        return sqr;
    }
    static void printSquare(int[][] sqr){
        int diagonalRight = 0;
        int tempC = 0;
        int tempR = 0;
        int totalRs[] = new int[sqr.length+2];
        
        for(int r = 0; r < sqr.length; r++){
            tempC = 0;
            tempR = 0;
            System.out.printf("%5s","");
            for(int c = 0; c < sqr.length; c++){
                tempC += sqr[r][c];
                tempR += sqr[c][r];
                if(sqr.length-r-1 == c){
                   diagonalLeft += sqr[r][c];
                }
                if(r == c){
                   diagonalRight += sqr[r][c];
                }
                System.out.printf("%5d", sqr[r][c]);
            }
            totalRs[r+1] = tempR;
            System.out.printf(" =%3d", tempC);
            System.out.println();
        }
        totalRs[0] = diagonalLeft;
        totalRs[totalRs.length - 1] = diagonalRight;
        for(int i = 0; i < totalRs.length; i++){
             System.out.printf("%5s", "=");
        }
        System.out.println();
        for(int i = 0; i < totalRs.length; i++){
             System.out.printf("%5d", totalRs[i]);
        }
        System.out.println("\n");
    }